import Head from "next/head";
import { useEffect, useState } from "react";
import { API } from "../utils/axios";
import { AxiosResponse } from "axios";

interface SWPeople {
  count: number;
  next: string;
  prev: string;
  results: People[];
}

interface People {
  name: string;
  starships: string[];
}

interface Starship {
  name: string;
  manufacturer: string;
}

export default function FirstPost() {
  const [people, setPeople] = useState<People[]>([]);
  const [loading, setLoading] = useState(false);
  const [starshipLoading, setStarshipLoading] = useState(false);
  const [starships, setStarships] = useState<Starship[]>([]);

  const fetchPeople = async () => {
    try {
      setLoading(true);
      const allpeople: AxiosResponse<SWPeople> = await API.get("people/");
      setPeople(allpeople.data.results);
      console.log(allpeople.data.results);
    } catch (e) {
      console.log(e);
    } finally {
      setLoading(false);
    }
  };

  const fetchAllStarship = async (ids: string[]) => {
    setStarshipLoading(true);
    const promisesArr = ids.map(
      async (idx) => await API.get(`starships/${idx}`)
    );
    Promise.all(promisesArr)
      .then((allStarshipsArr: AxiosResponse<Starship>[]) => {
        const cleanStarships = allStarshipsArr.map((a) => {
          const returnObj = {
            name: a.data.name,
            manufacturer: a.data.manufacturer,
          };
          return returnObj;
        });
        setStarships(cleanStarships);
      })
      .catch((e) => console.log(e));
    setStarshipLoading(false);
  };

  useEffect(() => {
    fetchPeople();
  }, []);

  const getIdFromURL = (url: string) => {
    const splittedArray = url?.split("/");
    return splittedArray?.[splittedArray?.length - 2];
  };

  const handlePeopleClick = (attr: People) => {
    setStarships([]);
    const ids = attr.starships.map((eachUrl) => {
      return getIdFromURL(eachUrl);
      // fetch each starship using the id
    });
    fetchAllStarship(ids);
  };

  return (
    <>
      <Head>
        <title>Sandip</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <h2>Available Peoples:</h2>
        <br />
        {loading
          ? "loading...."
          : people.map((people) => {
              return (
                <div>
                  <button onClick={() => handlePeopleClick(people)}>
                    {people.name}
                  </button>
                </div>
              );
            })}
      </div>
      <div>
        <h2>current starships:</h2>
        <br />
        {loading
          ? "loading...."
          : starships?.map((starship) => {
              return (
                <div>
                  <button onClick={() => {}}>{starship.name}</button>
                </div>
              );
            })}
      </div>
    </>
  );
}
