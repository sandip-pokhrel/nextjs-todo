import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";
import { useEffect, useState } from "react";
import { API } from "../utils/axios";
import { AxiosResponse } from "axios";

// TODO: use star wars people API to get the list of People which when clicked gives a list of starships they have

interface ITodo {
  title: string;
  id: string;
  isCompleted: boolean;
}

interface SWPlanet {
  climate: string;
  diameter: number;
  gravity: string;
  name: string;
  orbital_period: number;
  population: number;
  residents: string[];
  rotation_period: number;
  surface_water: number;
  terrain: string;
  url: string;
}

interface WrappedPlanets {
  count: number;
  next: string;
  prev: string;
  results: SWPlanet[];
}

export default function Home() {
  const [todos, setTodos] = useState<ITodo[]>([]);
  const [title, setTitle] = useState("");
  const [planets, setPlanets] = useState<SWPlanet[]>([]);
  const [loading, setLoading] = useState(false);

  const sortedTodos = todos.sort((a) => (a.isCompleted ? 1 : -1));

  const fetchPlanets = async () => {
    try {
      setLoading(true);
      const planets3: AxiosResponse<WrappedPlanets> = await API.get("planets/");
      setPlanets(planets3.data.results);
    } catch (e) {
      console.log(e);
    } finally {
      setLoading(false);
    }
  };
  useEffect(() => {
    fetchPlanets();
  }, []);

  return (
    <>
      <Head>
        <title>Sandip</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Todo</h1>
      <label>Task</label>
      <input
        value={title}
        onChange={(event) => {
          setTitle(event.target.value);
        }}
      ></input>
      <br />

      <br />
      <button
        onClick={() => {
          if (!title) return;
          setTodos([
            ...todos,
            {
              title: title,
              isCompleted: false,
              id: Math.random().toString(),
            },
          ]);
          setTitle("");
        }}
      >
        Save
      </button>
      <br />
      <br />
      {sortedTodos.map((eachTodo) => (
        <div
          style={{
            color: eachTodo.isCompleted ? "red" : "black",
          }}
          key={eachTodo.id}
        >
          <h3>{eachTodo.title}</h3>

          <button
            onClick={() => {
              const changedTodos = todos.map((item) => {
                return {
                  ...item,
                  isCompleted:
                    eachTodo.id === item.id
                      ? !item.isCompleted
                      : item.isCompleted,
                };
              });
              setTodos(changedTodos);
            }}
          >
            Completed
          </button>
          <button
            onClick={() => {
              const filteredTodos = todos.filter((item) => {
                return eachTodo.id !== item.id;
              });
              setTodos(filteredTodos);
            }}
          >
            Delete
          </button>
        </div>
      ))}
      <div>
        <p>Climates are:</p>
        {loading
          ? "loading...."
          : planets.map((planet) => {
              return planet.climate.includes("temperate") ? (
                <div>{planet.name}</div>
              ) : null;
            })}
      </div>
      {/* <div>
        <p>Climates are:</p>
        {planets.map((planet) => {
          return <div>{planet.climate}</div>;
        })}
      </div> */}
    </>
  );
}
